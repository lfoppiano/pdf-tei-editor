#!/usr/bin/env python3

from flask import Flask, send_from_directory, jsonify, redirect
import os, sys
import importlib.util
from glob import glob
from dotenv import load_dotenv

web_root = os.path.dirname(os.path.dirname(__file__))
load_dotenv()

def create_app():
    app = Flask(__name__, static_folder=web_root)

    # Dynamically register blueprints from the 'api' folder
    api_folder = os.path.join(web_root, 'api')
    for filename in os.listdir(api_folder):
        if filename.endswith('.py') and filename != '__init__.py':
            module_name = filename[:-3]  # Remove ".py" extension
            module_path = os.path.join(api_folder, filename)

            # Use importlib to dynamically import the module
            spec = importlib.util.spec_from_file_location(module_name, module_path)
            module = importlib.util.module_from_spec(spec)
            spec.loader.exec_module(module)

            # Check if the module has a 'bp' attribute (blueprint instance)
            if hasattr(module, 'bp'):
                app.register_blueprint(module.bp)
                print(f"Registered blueprint: {module_name}")  # Optional logging
            else:
                print(f"Warning: No blueprint ('bp' attribute) found in {module_name}")

    # Serve static files
    @app.route('/<path:path>')
    def serve_static(path):
        return send_from_directory(web_root, path)
    
    # Redirect root to /web/index.html
    @app.route('/')
    def index():
        return redirect('/web/index.html')
    

    # Simple health check
    @app.route('/api/health', methods=['GET'])
    def health_check():
        """
        Simple health check endpoint.
        """
        return jsonify({'status': 'ok'}), 200

    return app

if __name__ == '__main__':
    # host and port default to localhost:3001 unless overridden by CLI arguments
    host = sys.argv[1] if len(sys.argv) > 1 else "localhost"
    port = int(sys.argv[2]) if len(sys.argv) > 2 else 3001
    # start the server
    app = create_app()
    reload_extra_files = glob('./api/*')
    app.run(host=host, 
            port=port, 
            debug=False, 
            load_dotenv=True, 
            extra_files=reload_extra_files)
